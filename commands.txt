


Apply a given Perturbation to a model
java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher \
-s Workflows/ApplyPerturbation.py MODEL.zginml [export:exportedfile] pert:ZEB1%1

Apply a given perturbation and get stable states of the perturbed model
java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher \
-s Workflows/GetStableStatesAfterPerturbations.py Model.zginml /
[pert:CellCycleArrest,0-CellCycleArrest,1] [export:stableS]


Compare the Stable States of two models
java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher \
-s Workflows/CompareStableStates.py Model1.zginml  model:Model2.zginml

Generate Perturbations
java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher \
-s Workflows/GeneratePerturbations.py Model.zginml [export:name] [size:0-2]

Apply Regulation perturbation
java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher \
-s Workflows/ApplyInteractionPerturbation.py Model.zginml [inter:listofpert.csv]\
 [export:modelfilename]

Generate Stable States and export them to csv file
java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher \
-s Workflows/GenerateStableStates.py Model.zginml  [export:filename.csv]

Filte Perturbation by Value
 java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher \
 -s Workflows/getRestrictedPerturbations.py Model.zginml [export:export.csv] \
 [rest:max/min/range:0] [input:filename.csv]


 java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher \
 -s Workflows/getRestrictedStableStates.py Model.zginml [export:filename] \
 [pattern:******************]
 
 
 java -cp GINsim.jar:extensions/jython-standalone-2.7.0.jar org.ginsim.Launcher -s Workflows/input_SubStableStates.py  Model.zginml [export:filename] in:0001001110 pattern:10011111100000000101111111111011110000002

